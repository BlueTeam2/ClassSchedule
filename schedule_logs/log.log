[INFO ] 2020-04-27 15:37:30.759 [Test worker] c.s.c.PeriodController - Enter into update of PeriodController with periodDTO: PeriodDTO(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.784 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into update of PeriodServiceImpl with entity:Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.785 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isTimeInvalid of PeriodServiceImpl with entity: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.785 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getAll of PeriodServiceImpl
[INFO ] 2020-04-27 15:37:30.785 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into getAll of PeriodRepositoryImpl
[INFO ] 2020-04-27 15:37:30.894 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)] and newPeriod: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.896 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriods: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.896 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriod: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.896 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriods: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.897 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriod: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.897 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriods: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.897 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriod: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.897 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriods: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.897 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriod: Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)
[INFO ] 2020-04-27 15:37:30.897 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getById of PeriodServiceImpl with id 4
[INFO ] 2020-04-27 15:37:30.897 [Test worker] c.s.r.i.BasicRepositoryImpl - In findById(id = [4])
[INFO ] 2020-04-27 15:37:30.906 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into findByName method with name: 1 para updated
[INFO ] 2020-04-27 15:37:30.975 [Test worker] c.s.r.i.BasicRepositoryImpl - In update(entity = [Period(id=4, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para updated)]
[INFO ] 2020-04-27 15:37:31.361 [Test worker] c.s.c.PeriodController - Enter into save of PeriodController with addPeriodDTO: AddPeriodDTO(startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.361 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into save of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.362 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isTimeInvalid of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.362 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getAll of PeriodServiceImpl
[INFO ] 2020-04-27 15:37:31.362 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into getAll of PeriodRepositoryImpl
[INFO ] 2020-04-27 15:37:31.418 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)] and newPeriod: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.418 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriods: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.418 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriod: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.419 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriods: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.419 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriod: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.419 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriods: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.419 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriod: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.419 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriods: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.419 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriod: Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)
[INFO ] 2020-04-27 15:37:31.420 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into nameExists method with name:save period
[INFO ] 2020-04-27 15:37:31.420 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into findByName method with name: save period
[INFO ] 2020-04-27 15:37:31.475 [Test worker] c.s.r.i.BasicRepositoryImpl - In save(entity = [Period(id=0, startTime=1970-01-01 09:00:00.0, endTime=1970-01-01 10:00:00.0, name=save period)]
[INFO ] 2020-04-27 15:37:31.768 [Test worker] c.s.c.PeriodController - Enter into save of PeriodController with addPeriodDTO: AddPeriodDTO(startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.769 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into save of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.769 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isTimeInvalid of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.769 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getAll of PeriodServiceImpl
[INFO ] 2020-04-27 15:37:31.769 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into getAll of PeriodRepositoryImpl
[INFO ] 2020-04-27 15:37:31.825 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)] and newPeriod: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.825 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriods: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.826 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriod: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.826 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriods: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.826 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriod: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.826 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriods: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.826 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriod: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.826 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriods: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.827 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriod: Period(id=0, startTime=1970-01-01 01:00:00.0, endTime=1970-01-01 02:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:31.827 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into nameExists method with name:1 para
[INFO ] 2020-04-27 15:37:31.827 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into findByName method with name: 1 para
[ERROR] 2020-04-27 15:37:31.999 [Test worker] c.s.e.h.GlobalExceptionHandler - Period with parameter {name=1 para} already exists
[INFO ] 2020-04-27 15:37:32.177 [Test worker] c.s.c.PeriodController - Enter into get of PeriodController with id 4 
[INFO ] 2020-04-27 15:37:32.178 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getById of PeriodServiceImpl with id 4
[INFO ] 2020-04-27 15:37:32.178 [Test worker] c.s.r.i.BasicRepositoryImpl - In findById(id = [4])
[ERROR] 2020-04-27 15:37:32.468 [Test worker] c.s.e.h.GlobalExceptionHandler - Ambiguous handler methods mapped for '/classes': {public org.springframework.http.ResponseEntity com.softserve.controller.PeriodController.list(), public org.springframework.http.ResponseEntity com.softserve.controller.PeriodController.publicList()}
[INFO ] 2020-04-27 15:37:32.640 [Test worker] c.s.c.PeriodController - Enter into get of PeriodController with id 100 
[INFO ] 2020-04-27 15:37:32.640 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getById of PeriodServiceImpl with id 100
[INFO ] 2020-04-27 15:37:32.640 [Test worker] c.s.r.i.BasicRepositoryImpl - In findById(id = [100])
[ERROR] 2020-04-27 15:37:32.750 [Test worker] c.s.e.h.GlobalExceptionHandler - Period was not found for parameters {id=100}
[INFO ] 2020-04-27 15:37:32.920 [Test worker] c.s.c.PeriodController - Enter into update of PeriodController with periodDTO: PeriodDTO(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.921 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into update of PeriodServiceImpl with entity:Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.921 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isTimeInvalid of PeriodServiceImpl with entity: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.921 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getAll of PeriodServiceImpl
[INFO ] 2020-04-27 15:37:32.921 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into getAll of PeriodRepositoryImpl
[INFO ] 2020-04-27 15:37:32.977 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)] and newPeriod: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.977 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriods: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.977 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriod: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriods: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriod: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriods: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriod: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriods: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriod: Period(id=6, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=1 para)
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getById of PeriodServiceImpl with id 6
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.r.i.BasicRepositoryImpl - In findById(id = [6])
[INFO ] 2020-04-27 15:37:32.978 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into findByName method with name: 1 para
[INFO ] 2020-04-27 15:37:33.088 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into findByName method with name: 1 para
[ERROR] 2020-04-27 15:37:33.252 [Test worker] c.s.e.h.GlobalExceptionHandler - Period with parameter {name=1 para} already exists
[INFO ] 2020-04-27 15:37:33.423 [Test worker] c.s.c.PeriodController - Enter into update of PeriodController with periodDTO: PeriodDTO(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.423 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into update of PeriodServiceImpl with entity:Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.423 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isTimeInvalid of PeriodServiceImpl with entity: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.423 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getAll of PeriodServiceImpl
[INFO ] 2020-04-27 15:37:33.423 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into getAll of PeriodRepositoryImpl
[INFO ] 2020-04-27 15:37:33.479 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)] and newPeriod: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.479 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriods: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.479 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriod: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.479 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriods: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.479 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriod: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.479 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriods: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.479 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriod: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.480 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriods: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.480 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriod: Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:33.481 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getById of PeriodServiceImpl with id 5
[INFO ] 2020-04-27 15:37:33.481 [Test worker] c.s.r.i.BasicRepositoryImpl - In findById(id = [5])
[INFO ] 2020-04-27 15:37:33.481 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into findByName method with name: null
[INFO ] 2020-04-27 15:37:33.536 [Test worker] c.s.r.i.BasicRepositoryImpl - In update(entity = [Period(id=5, startTime=1970-01-01 13:00:00.0, endTime=1970-01-01 14:00:00.0, name=null)]
[ERROR] 2020-04-27 15:37:33.597 [Test worker] c.s.e.h.GlobalExceptionHandler - Validation failed for classes [com.softserve.entity.Period] during update time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Name cannot be empty', propertyPath=name, rootBeanClass=class com.softserve.entity.Period, messageTemplate='Name cannot be empty'}
]
[INFO ] 2020-04-27 15:37:33.778 [Test worker] c.s.c.PeriodController - Enter into delete of PeriodController with id: 5
[INFO ] 2020-04-27 15:37:33.778 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getById of PeriodServiceImpl with id 5
[INFO ] 2020-04-27 15:37:33.778 [Test worker] c.s.r.i.BasicRepositoryImpl - In findById(id = [5])
[INFO ] 2020-04-27 15:37:33.888 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into delete of PeriodServiceImpl with entity:Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para)
[INFO ] 2020-04-27 15:37:33.888 [Test worker] c.s.r.i.BasicRepositoryImpl - In delete(entity = [Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para)])
[INFO ] 2020-04-27 15:37:33.888 [Test worker] c.s.r.i.PeriodRepositoryImpl - In checkReference(period = [Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para)])
[INFO ] 2020-04-27 15:37:34.234 [Test worker] c.s.c.PeriodController - Enter into save of PeriodController with List of addPeriodDTO: [AddPeriodDTO(startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)]
[INFO ] 2020-04-27 15:37:34.236 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into save of PeriodServiceImpl with entities:[Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)]
[INFO ] 2020-04-27 15:37:34.237 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isTimeInvalid of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.237 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getAll of PeriodServiceImpl
[INFO ] 2020-04-27 15:37:34.237 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into getAll of PeriodRepositoryImpl
[INFO ] 2020-04-27 15:37:34.293 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isListOfPeriodsFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)], newPeriods: [Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)]
[INFO ] 2020-04-27 15:37:34.293 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)] and newPeriod: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.293 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods), newPeriods: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.293 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods), newPeriod: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.293 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)] and newPeriod: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.293 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriods: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.294 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriod: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.294 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriods: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.294 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), newPeriod: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.294 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriods: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.294 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), newPeriod: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.294 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriods: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.294 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para), newPeriod: Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)
[INFO ] 2020-04-27 15:37:34.295 [Test worker] c.s.r.i.BasicRepositoryImpl - In save(entity = [Period(id=0, startTime=1970-01-01 11:00:00.0, endTime=1970-01-01 12:00:00.0, name=save list of periods)]
[INFO ] 2020-04-27 15:37:34.577 [Test worker] c.s.c.PeriodController - Enter into save of PeriodController with addPeriodDTO: AddPeriodDTO(startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:34.578 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into save of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:34.578 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isTimeInvalid of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:34.578 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getAll of PeriodServiceImpl
[INFO ] 2020-04-27 15:37:34.578 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into getAll of PeriodRepositoryImpl
[INFO ] 2020-04-27 15:37:34.633 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)] and newPeriod: Period(id=0, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:34.633 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriods: Period(id=0, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=null)
[INFO ] 2020-04-27 15:37:34.633 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriod: Period(id=0, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=null)
[ERROR] 2020-04-27 15:37:34.688 [Test worker] c.s.e.h.GlobalExceptionHandler - null
[INFO ] 2020-04-27 15:37:34.864 [Test worker] c.s.c.PeriodController - Enter into save of PeriodController with addPeriodDTO: AddPeriodDTO(startTime=1970-01-01 03:30:00.0, endTime=1970-01-01 04:30:00.0, name=intersect period)
[INFO ] 2020-04-27 15:37:34.865 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into save of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 03:30:00.0, endTime=1970-01-01 04:30:00.0, name=intersect period)
[INFO ] 2020-04-27 15:37:34.865 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isTimeInvalid of PeriodServiceImpl with entity: Period(id=0, startTime=1970-01-01 03:30:00.0, endTime=1970-01-01 04:30:00.0, name=intersect period)
[INFO ] 2020-04-27 15:37:34.865 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into getAll of PeriodServiceImpl
[INFO ] 2020-04-27 15:37:34.865 [Test worker] c.s.r.i.PeriodRepositoryImpl - Enter into getAll of PeriodRepositoryImpl
[INFO ] 2020-04-27 15:37:34.920 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodFree of PeriodServiceImpl with entities oldPeriods: [Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), Period(id=4, startTime=2020-04-15 01:00:00.0, endTime=2020-04-15 02:00:00.0, name=1 para), Period(id=5, startTime=2020-04-15 03:00:00.0, endTime=2020-04-15 04:00:00.0, name=2 para), Period(id=6, startTime=2020-04-15 05:00:00.0, endTime=2020-04-15 06:00:00.0, name=3 para)] and newPeriod: Period(id=0, startTime=1970-01-01 03:30:00.0, endTime=1970-01-01 04:30:00.0, name=intersect period)
[INFO ] 2020-04-27 15:37:34.920 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsGlued of PeriodServiceImpl with entities oldPeriods: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriods: Period(id=0, startTime=1970-01-01 03:30:00.0, endTime=1970-01-01 04:30:00.0, name=intersect period)
[INFO ] 2020-04-27 15:37:34.920 [Test worker] c.s.s.i.PeriodServiceImpl - Enter into isPeriodsIntersect of PeriodServiceImpl with entities oldPeriod: Period(id=7, startTime=1970-01-01 03:00:00.0, endTime=1970-01-01 04:00:00.0, name=4 para), newPeriod: Period(id=0, startTime=1970-01-01 03:30:00.0, endTime=1970-01-01 04:30:00.0, name=intersect period)
[ERROR] 2020-04-27 15:37:34.975 [Test worker] c.s.e.h.GlobalExceptionHandler - Your period has conflict with already existed periods
