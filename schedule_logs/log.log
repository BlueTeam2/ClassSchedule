[INFO ] 2020-04-24 15:42:14.412 [Test worker] c.s.s.i.ScheduleServiceImpl - In update(entity = [Schedule(id=1, dayOfWeek=TUESDAY, evenOdd=EVEN, semester=Semester(id=2, description=null, year=0, startDay=null, endDay=null, currentSemester=false), room=Room(id=2, name=null, type=RoomType(id=2, description=null)), period=Period(id=2, startTime=null, endTime=null, name=null), lesson=Lesson(id=2, hours=0, teacherForSite=null, subjectForSite=null, lessonType=null, teacher=null, subject=null, group=Group(id=2, title=null)))]
[INFO ] 2020-04-24 15:42:14.436 [Test worker] c.s.s.i.ScheduleServiceImpl - In isConflictForGroupInSchedule(semesterId = [2], dayOfWeek = [TUESDAY], evenOdd = [EVEN], classId = [2], lessonId = [2])
[INFO ] 2020-04-24 15:42:14.443 [Test worker] c.s.s.i.ScheduleServiceImpl - In getInfoForCreatingSchedule (semesterId = [1], dayOfWeek = [MONDAY], evenOdd = [EVEN], classId = [1], lessonId = [1])
[INFO ] 2020-04-24 15:42:14.443 [Test worker] c.s.s.i.ScheduleServiceImpl - In isConflictForGroupInSchedule(semesterId = [1], dayOfWeek = [MONDAY], evenOdd = [EVEN], classId = [1], lessonId = [1])
[ERROR] 2020-04-24 15:42:14.444 [Test worker] c.s.s.i.ScheduleServiceImpl - Schedule for group already exists
[INFO ] 2020-04-24 15:42:14.457 [Test worker] c.s.s.i.ScheduleServiceImpl - In getInfoForCreatingSchedule (semesterId = [1], dayOfWeek = [MONDAY], evenOdd = [EVEN], classId = [1], lessonId = [1])
[INFO ] 2020-04-24 15:42:14.458 [Test worker] c.s.s.i.ScheduleServiceImpl - In isConflictForGroupInSchedule(semesterId = [1], dayOfWeek = [MONDAY], evenOdd = [EVEN], classId = [1], lessonId = [1])
[INFO ] 2020-04-24 15:42:14.458 [Test worker] c.s.s.i.ScheduleServiceImpl - In isTeacherAvailable (semesterId = [1], dayOfWeek = [MONDAY], evenOdd = [EVEN], classId = [1], lessonId = [1]
[INFO ] 2020-04-24 15:42:14.461 [Test worker] c.s.s.i.ScheduleServiceImpl - In getById(id = [2])
[INFO ] 2020-04-24 15:42:14.478 [Test worker] c.s.s.i.ScheduleServiceImpl - In save(entity = [Schedule(id=1, dayOfWeek=MONDAY, evenOdd=ODD, semester=Semester(id=1, description=null, year=0, startDay=null, endDay=null, currentSemester=false), room=Room(id=1, name=null, type=RoomType(id=1, description=null)), period=Period(id=1, startTime=null, endTime=null, name=null), lesson=Lesson(id=1, hours=0, teacherForSite=null, subjectForSite=null, lessonType=null, teacher=null, subject=null, group=Group(id=1, title=null)))]
[INFO ] 2020-04-24 15:42:14.479 [Test worker] c.s.s.i.ScheduleServiceImpl - In isConflictForGroupInSchedule(semesterId = [1], dayOfWeek = [MONDAY], evenOdd = [ODD], classId = [1], lessonId = [1])
[INFO ] 2020-04-24 15:42:14.482 [Test worker] c.s.s.i.ScheduleServiceImpl - In save(entity = [Schedule(id=1, dayOfWeek=MONDAY, evenOdd=ODD, semester=Semester(id=1, description=null, year=0, startDay=null, endDay=null, currentSemester=false), room=Room(id=1, name=null, type=null), period=Period(id=1, startTime=null, endTime=null, name=null), lesson=Lesson(id=1, hours=0, teacherForSite=null, subjectForSite=null, lessonType=null, teacher=null, subject=null, group=Group(id=1, title=null)))]
[INFO ] 2020-04-24 15:42:14.482 [Test worker] c.s.s.i.ScheduleServiceImpl - In isConflictForGroupInSchedule(semesterId = [1], dayOfWeek = [MONDAY], evenOdd = [ODD], classId = [1], lessonId = [1])
[ERROR] 2020-04-24 15:42:14.483 [Test worker] c.s.s.i.ScheduleServiceImpl - Schedule for group with id [1] has conflict with already existing
[INFO ] 2020-04-24 15:42:14.496 [Test worker] c.s.s.i.ScheduleServiceImpl - In getFullSchedule(semesterId = [1], groupId[1])
[INFO ] 2020-04-24 15:42:14.496 [Test worker] c.s.s.i.ScheduleServiceImpl - In groupHasScheduleInSemester(semesterId = [1], groupId = [1])
[INFO ] 2020-04-24 15:42:14.497 [Test worker] c.s.s.i.ScheduleServiceImpl - In getDaysWhenGroupHasClassesBySemester(semesterId = [1], groupId = [1])
[INFO ] 2020-04-24 15:42:14.500 [Test worker] c.s.s.i.ScheduleServiceImpl - In getClassesForGroupBySemesterByDayOfWeek(semesterId = [1], groupId = [1], day = [MONDAY])
[INFO ] 2020-04-24 15:42:14.501 [Test worker] c.s.s.i.ScheduleServiceImpl - In getLessonsForGroupForPeriodBySemesterAndDay(semesterId = [1], groupId = [1], periodId = [1], day = [MONDAY])
[INFO ] 2020-04-24 15:42:14.502 [Test worker] c.s.s.i.ScheduleServiceImpl - In getLessonsForGroupForPeriodBySemesterAndDay(semesterId = [1], groupId = [1], periodId = [2], day = [MONDAY])
[INFO ] 2020-04-24 15:42:14.505 [Test worker] c.s.s.i.ScheduleServiceImpl - In update(entity = [Schedule(id=1, dayOfWeek=TUESDAY, evenOdd=EVEN, semester=Semester(id=2, description=null, year=0, startDay=null, endDay=null, currentSemester=false), room=Room(id=2, name=null, type=RoomType(id=2, description=null)), period=Period(id=2, startTime=null, endTime=null, name=null), lesson=Lesson(id=2, hours=0, teacherForSite=null, subjectForSite=null, lessonType=null, teacher=null, subject=null, group=Group(id=2, title=null)))]
[INFO ] 2020-04-24 15:42:14.505 [Test worker] c.s.s.i.ScheduleServiceImpl - In isConflictForGroupInSchedule(semesterId = [2], dayOfWeek = [TUESDAY], evenOdd = [EVEN], classId = [2], lessonId = [2])
