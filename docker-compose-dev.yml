version: '3.5'

services:
  schedule-test:
    container_name: schedule-test
    restart: "no"
    build: 
      context: .
      target: backend-test
    environment:
      - POSTGRES_URL
      - POSTGRES_TEST_URL
      - POSTGRES_ADMIN
      - POSTGRES_ADMIN_PASSWORD
      - REDIS_URL
      - MONGO_DATABASE
      - MONGO_URL
      - JWT_TOKEN
      - JWT_EXPIRED
    networks:
      - backend
    depends_on:
      - postgres
      - mongo
      - redis

  schedule-backend:
    container_name: schedule-backend
    restart: always
    build: 
      context: .
      target: backend-tomcat
    ports:
      - "${SCHEDULE_APP_PORT}:8080"
    environment:
      - POSTGRES_URL
      - POSTGRES_ADMIN
      - POSTGRES_ADMIN_PASSWORD
      - REDIS_URL
      - MONGO_DATABASE
      - MONGO_URL
      - JWT_TOKEN
      - JWT_EXPIRED
    networks:
      - backend
    depends_on:
      - postgres
      - mongo
      - redis
    healthcheck:
      test: 
        [
          "CMD-SHELL",
          "curl --output /dev/null --silent --fail http://127.0.0.1:8080/public/semesters || exit 1"
          ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 30s  

  postgres:
    extends:
      file: docker-compose-deps.yml
      service: postgres
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_ADMIN
      - POSTGRES_ADMIN_PASSWORD
      - POSTGRES_DATABASE
      - POSTGRES_TEST_DATABASE
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./backup/initial_data.dump:/docker-entrypoint-initdb.d/initial_data.dump
      - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    